buildscript {
    ext {
        releaser_version = "0.1.0-SNAPSHOT"
        ghPages_version = releaser_version
        kotlin_version = '1.2.21'
        pom_explorer_version = '1.3.1'
        atrium_version = '0.6.0'
        mockito_kotlin_version = '1.5.0'
        dokka_version = '0.9.14'
        dokka_sourceMapping = 'tree/master'

        srcKotlin = 'src/main/kotlin'

        //spek.gradle
        jacoco_tool_version = '0.7.9'
        spek_version = '1.1.5'
        junit_version = '1.0.2'

        //publish.gradle
        bintray_version = '1.7.3'
        publish_pkg_name = project.name
        github_url= "https://github.com/loewenfels/${project.name}"
        publish_vcsUrl = "${github_url}.git"

        //gh-pages.gradle
        docProjects = subprojects

        //jacoco-multi-project.gradle
        projectsWithoutSources = [] //currently all have sources
        jacocoMulti = [sourceProjects: subprojects, jacocoProjects: subprojects ]
    }

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

repositories {
    mavenCentral()
}

subprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url  "https://dl.bintray.com/robstoll/copies"
        }
    }

    apply plugin: 'kotlin'

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    }
}

def projectsWithSources = subprojects - projectsWithoutSources
configure(projectsWithSources) {
    apply plugin: 'org.jetbrains.dokka'

    dokka {
        outputFormat = 'html'
        outputDirectory = "$buildDir/kdoc"
        linkMapping {
            dir = "$srcKotlin"
            url = "$github_url/${dokka_sourceMapping}/${project.name}/$srcKotlin"
            suffix = '#L'
        }
        linkMapping {
            dir = "${rootProject.projectDir}/${project.name}-core-api/$srcKotlin"
            url = "$github_url/${dokka_sourceMapping}/${project.name}-core-api/$srcKotlin"
            suffix = '#L'
        }

        sourceDirs = files(srcKotlin)
    }

    task sourceJar(type: Jar) {
        from project.sourceSets.main.allSource
        classifier 'sources'
    }

    task javadocJar(type: Jar, dependsOn: dokka) {
        from dokka.outputDirectory
        classifier = 'javadoc'
    }

    afterEvaluate {
        it.ext.publish_artifacts = [sourceJar, javadocJar]
    }
}

configure(projectsWithoutSources) {
    afterEvaluate {
        it.ext.publish_artifacts = []
    }
}

// has to be after the above two blocks which define `it.ext.publish_artifacts`
subprojects {
    afterEvaluate { subproject ->
        subproject.ext {
            publish_artifactId = subproject.name
            publish_version = releaser_version
        }
        apply from: "${rootProject.projectDir}/gradle/scripts/publish.gradle", to: subproject
    }
}

configure(jacocoMulti.jacocoProjects) {
    apply from: "${rootProject.projectDir}/gradle/scripts/spek.gradle"

    dependencies {
        testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        testCompile("com.nhaarman:mockito-kotlin:$mockito_kotlin_version") {
            exclude group: 'org.jetbrains.kotlin'
        }
        testCompile("ch.tutteli:atrium-cc-en_UK-robstoll:$atrium_version") {
            exclude group: 'org.jetbrains.kotlin'
        }
    }
}


apply from: 'gradle/scripts/jacoco-multi-project.gradle'
apply from: 'gradle/scripts/gh-pages.gradle'
